name: Post RCA Form

permissions:
  issues: write
  contents: read

on:
  workflow_call:
    inputs:
      issue_labels:
        description: Labels of issues to post RCA form to.
        required: true
        type: string
      google_form_base_url:
        description: Base URL of the Google Form.
        required: true
        type: string
      repo_owner:
        description: The repo owner
        required: true
        type: string
      repo_name:
        description: The repo name
        required: true
        type: string

jobs:
  post-rca-form:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Fetch all open, assigned issues with specific labels
      - name: Get specified GitHub issues
        uses: actions/github-script@v7
        id: fetch_issues
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner_name = '${{ inputs.repo_owner }}';
            const repo_name = '${{ inputs.repo_name }}';
            const inputLabels = JSON.parse('${{ inputs.issue_labels }}');
            console.log(`ðŸ”Ž Fetching issues for ${owner_name}/${repo_name}`);
            console.log("ðŸ”Ž Input labels:", inputLabels);

            const allIssues = await github.paginate(
              github.rest.issues.listForRepo,
              {
                owner: owner_name,
                repo: repo_name,
                state: 'open',
                per_page: 100,
              }
            );

            const targetIssues = allIssues.filter(issue =>
              issue.labels.some(label => inputLabels.includes(label.name)) &&
              issue.assignees.length > 0
            );

            console.log("ðŸ”Ž Found issues matching criteria:", targetIssues);
            return targetIssues;

      # Step 2: Post comments and log results
      - name: Post Google Form link and log results
        uses: actions/github-script@v7
        env:
          GOOGLE_FORM_BASE_URL: ${{ inputs.google_form_base_url }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const googleFormBaseUrl = process.env.GOOGLE_FORM_BASE_URL;
            const owner_name = '${{ inputs.repo_owner }}';
            const repo_name = '${{ inputs.repo_name }}';
            const issues = ${{ steps.fetch_issues.outputs.result }};

            const processed = [];
            const skipped = [];

            for (const issue of issues) {
              // Check if the issue already has a comment with the form link
              const { data: comments } = await github.rest.issues.listComments({
                owner: owner_name,
                repo: repo_name,
                issue_number: issue.number,
              });

              const hasFormComment = comments.some(comment =>
                comment.body.includes("<!-- AUTO-FORM -->")
              );

              if (hasFormComment) {
                skipped.push(`#${issue.number} (existing comment)`);
                continue;
              }

              const formUrl = `${googleFormBaseUrl}${issue.number}`;
              // Post the form link as a comment on the issue
              await github.rest.issues.createComment({
                owner: owner_name,
                repo: repo_name,
                issue_number: issue.number,
                body: `Please complete this RCA report:\n${formUrl}\n<!-- AUTO-FORM -->`,
              });

              processed.push(`#${issue.number}`);
            }

            // Log processed and skipped issues
            console.log("Processed Issues:\n" + processed.join('\n'));
            console.log("Skipped Issues:\n" + skipped.join('\n'));
