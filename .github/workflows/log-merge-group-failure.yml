name: Log merge group failure

on:
  workflow_call:
    secrets:
      GOOGLE_APPLICATION_CREDENTIALS:
        required: true
      GOOGLE_SERVICE_ACCOUNT:
        required: true
      SPREADSHEET_ID:
        required: true
      SHEET_NAME:
        required: true
  workflow_dispatch:

jobs:
  log-merge-group-failure:
    name: Log merge group failure
    runs-on: ubuntu-latest
    steps:
      # This is needed to handle the case when a PR is manually removed from the merge queue.
      # GitHub Actions continue running even after the PR has already been removed.
      # This step checks if the head commit hash is in the merge queue, and skips logging if it is not.
      - name: Check commit hash in the merge queue
        id: check-commit-hash
        env:
          OWNER: ${{ github.repository_owner }}
          REPOSITORY: ${{ github.event.repository.name }}
          HEAD_COMMIT_HASH: ${{ github.event.merge_group.head_sha }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          commit_is_in_the_merge_queue=$(gh api graphql --field owner="$OWNER" --field repository="$REPOSITORY" --field query="
            query ($owner: String!, $repository: String!) {
              repository(owner: $owner, name: $repository) {
                mergeQueue {
                  entries(first: 10) {
                    nodes {
                      pullRequest {
                        headRefOid
                      }
                    }
                  }
                }
              }
            }" | jq --arg head_commit_hash "$HEAD_COMMIT_HASH" '[.data.repository.mergeQueue.entries.nodes[]?.pullRequest?.headRefOid | select(. == $head_commit_hash)] | any'
          )
          if [[ $commit_is_in_the_merge_queue != 'true' ]]; then
            echo "Head commit hash cannot be found in the merge queue, logging will be skipped."
          fi
          echo 'COMMIT_IS_IN_THE_MERGE_QUEUE='"$commit_is_in_the_merge_queue" >> "$GITHUB_OUTPUT"

      - name: Download oauth2l
        if: ${{ steps.check-commit-hash.outputs.COMMIT_IS_IN_THE_MERGE_QUEUE == 'true' }}
        run: |
          curl --silent https://storage.googleapis.com/oauth2l/1.3.2/linux_amd64.tgz | tar xz
          echo "$PWD/linux_amd64" >> "$GITHUB_PATH"

      - name: Create service_account.json
        if: ${{ steps.check-commit-hash.outputs.COMMIT_IS_IN_THE_MERGE_QUEUE == 'true' }}
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          GOOGLE_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
        run: |
          echo "$GOOGLE_SERVICE_ACCOUNT" > "$GOOGLE_APPLICATION_CREDENTIALS"

      - name: Write data to google sheets
        if: ${{ steps.check-commit-hash.outputs.COMMIT_IS_IN_THE_MERGE_QUEUE == 'true' }}
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          SPREADSHEET_ID: ${{ secrets.SPREADSHEET_ID }}
          SHEET_NAME: ${{ secrets.SHEET_NAME }}
        run: |
          current_date=$(date +%Y-%m-%d)
          token=$(oauth2l fetch --scope https://www.googleapis.com/auth/spreadsheets)
          spreadsheet_data=$(curl --silent --header "Authorization: Bearer $token" https://sheets.googleapis.com/v4/spreadsheets/"$SPREADSHEET_ID"/values/"$SHEET_NAME"!A:B)
          current_date_index=$(echo "$spreadsheet_data" | jq --arg current_date "$current_date" '(.values | map(.[0])) | (index($current_date) | if . == null then null else . + 1 end)')
          current_number_of_prs=$(echo "$spreadsheet_data" | jq --arg current_date "$current_date" '(.values[] | select(.[0] == $current_date) | .[1] | tonumber) // null')
          if [ "$current_date_index" == "null" ]; then
            curl --silent --header "Authorization: Bearer $token" --header "Content-Type: application/json" --request POST --data "{\"values\":[[\"$current_date\", 1]]}" https://sheets.googleapis.com/v4/spreadsheets/"$SPREADSHEET_ID"/values/"$SHEET_NAME"!A:A:append?valueInputOption=USER_ENTERED
          else
            curl --silent --header "Authorization: Bearer $token" --header "Content-Type: application/json" --request PUT --data "{\"values\":[[\"$current_date\", $(("$current_number_of_prs" + 1))]]}" https://sheets.googleapis.com/v4/spreadsheets/"$SPREADSHEET_ID"/values/"$SHEET_NAME"!A"$current_date_index":B"$current_date_index"?valueInputOption=USER_ENTERED
          fi
